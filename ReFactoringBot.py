import telepot
import time
import random
import requests
from bs4 import BeautifulSoup as b
from telepot.loop import MessageLoop
from telepot.namedtuple import InlineKeyboardMarkup, InlineKeyboardButton


def construct_keyboard(data: list):
    keyboard_list = [[InlineKeyboardButton(text=item[0], callback_data=item[1])
                      for item in data_line]
                     for data_line in data]

    return InlineKeyboardMarkup(inline_keyboard=keyboard_list)


# –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞. –ú–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ç—Ä–æ–π–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö			
start_text = '''–ü—Ä–∏–≤–µ—Ç, –î–æ—Ä–æ–≥–∞—è!
–†–∞–¥–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—åüòò

P.S. –î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –º—É–∂—á–∏–Ω–æ–π –¥–ª—è –¥–µ–≤—É—à–µ–∫ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.dddd
–ü–æ–∫–∞...
–ü–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ –≤—ã–π–¥–µ—Ç! ;-)
'''
# –ó–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –æ–±—Ä–∞—â–µ–Ω–∏–π (first) –∏ –æ—Ç–≤–µ—Ç–æ–≤ (second) –¥–ª—è –º–æ–¥—É–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è (magic_ball)
first = ["–î–æ—Ä–æ–≥–∞—è,",
         "–ú–∏–ª–∞—è,",
         "–†–æ–¥–Ω–∞—è –º–æ—è,",
         "–ü–æ–¥—Ä—É–≥–∞,",
         "–î—Ä–∞–≥–æ—Ü–µ–Ω–Ω–∞—è,",
         "–î–µ–≤–æ—á–∫–∞ –º–æ—è,",
         "–ü–æ–¥—Ä—É–∂–∫–∞,",
         "–ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –º–æ—è,",
         "–°–≤–µ—Ç –æ—á–µ–π –º–æ–∏—Ö,"]

second = ["—Å–µ–π—á–∞—Å  —É –º–µ–Ω—è –±–æ–ª–∏—Ç –≥–æ–ª–æ–≤–∞üò∞",
          "–∞ –∫–∞—Ä–∞–Ω–¥–∞—à –±—ã–ª –∫—Ä–∞—Å–Ω—ã–π, –∏–ª–∏ —è –æ–ø—è—Ç—å –Ω–µ —É–≥–∞–¥–∞–ª–∞?üôÉ",
          "–õ—É—á—à–µ —ç—Ç–æ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å",
          "–ü—Ä–æ—Å—Ç–æ —Å–¥–µ–ª–∞–π —ç—Ç–æ!üòé",
          "–û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –ù–ï–¢üìõ",
          "–ö–æ–Ω–µ—á–Ω–æ –∂–µ –Ω–µ—Ç",
          "–î–∞, –¥–∞ –∏ –µ—â—ë —Ä–∞–∑ –î–ê!üòç",
          "–°–µ–≥–æ–¥–Ω—è –ª—É—á—à–µ –≤—ã–ø–∏—Ç—å –≤–∏–Ω–∏—à–∫–∞üç∑",
          "–µ—â—ë —Ä–∞–∑–æ–∫ –ø–æ–¥—É–º–∞–π –Ω–∞–¥ –≤–æ–ø—Ä–æ—Å–æ–º",
          "42üò±",
          "–≤ —ç—Ç–æ–π –∂–∏–∑–Ω–∏ –Ω—É–∂–Ω–æ –ø–æ–ø—Ä–æ–≤–∞—Ç—å –≤—Å—ë, –∫—Ä–æ–º–µ —ç—Ç–æ–≥–æ –∫–æ–Ω–µ—á–Ω–æ",
          "–ü–æ–ø—Ä–æ–±—É–π —Å–ø—Ä–æ—Å–∏—Ç—å –µ—â—ë —Ä–∞–∑", "–∑–∞–≤—Ç—Ä–∞, –≤—Å—ë –∑–∞–≤—Ç—Ä–∞...",
          "–∑–∞–±—É–¥—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–± —ç—Ç–æ–º",
          "–µ—Å–ª–∏ —ç—Ç–æ –∏–∑-–∑–∞ –Ω–µ–≥–æ, —Ç–æ –ª—É—á—à–µ –ø–µ—Ä–µ—Å—Ç–∞–Ω—å –æ–± —ç—Ç–æ–º –¥—É–º–∞—Ç—å",
          "–¥–∞–≤–∞–π –Ω–µ —Å–µ–π—á–∞—Å. –Ø —Å–ª–∏—à–∫–æ–º –∑–∞–Ω—è—Ç–∞üòµ",
          "–Ω–∞–ø–∏—à—É –∫–∞–∫ —É–∑–Ω–∞—éüôÑ",
          "—Ç—ã —Å–∞–º–∞—è –∫—Ä—É—Ç–∞—è, —É —Ç–µ–±—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—èüòâ"]


#–ö–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è, —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–∞–∑–¥–µ–ª–µ 'magic_ball'
class Message:
    def __init__(self):
        self.text = random.choice(first) + ' ' + random.choice(second)

    def new_message(self):
        self.text = random.choice(first) + ' ' + random.choice(second)
        return self.text

mesg = Message()

signs_q = {
        'data': construct_keyboard([[(u'–û–≤–µ–Ω\U00002648 ', 'aries')],
                                    [(u'–¢–µ–ª–µ—Ü\U00002649', 'taurus')],
                                    [(u'–ë–ª–∏–∑–Ω–µ—Ü—ã\U0000264A', 'gemini')],
                                    [(u'–†–∞–∫\U0000264B', 'cancer')],
                                    [(u'–õ–µ–≤\U0000264C', 'leo')],
                                    [(u'–î–µ–≤–∞\U0000264D', 'virgo')],
                                    [(u'–í–µ—Å—ã\U0000264E', 'libra')],
                                    [(u'–°–∫–æ—Ä–ø–∏–æ–Ω\U0000264F', 'scorpio')],
                                    [(u'–°—Ç—Ä–µ–ª–µ—Ü\U00002650', 'sagittarius')],
                                    [(u'–ö–æ–∑–µ—Ä–æ–≥\U00002651', 'capricorn')],
                                    [(u'–í–æ–¥–æ–ª–µ–π\U00002652', 'aquarius')],
                                    [(u'–†—ã–±—ã\U00002653', 'pisces')],
                                    [(u'\U00002B05 –ù–∞–∑–∞–¥', 'horoscope')],
                                    [(u'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
                                    ]),
        'message_text': '–í—ã–±–µ—Ä–∏ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞',
        'answer': None
    }


# –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö. –°–æ–¥–µ—Ä–∂–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –µ–º—É –∫–Ω–æ–ø–∫–∏, —Ç–µ–∫—Å—Ç –∏ –æ—Ç–≤–µ—Ç
bot_data = {
    'main_menu': {
        'data': construct_keyboard([[(u"\U0001F52E –ì–æ—Ä–æ—Å–∫–æ–ø", 'horoscope')],
                                    [(u'\U00002B50 –ú–æ—Ç–∏–≤–∞—Ü–∏—è', 'motivation')],
                                    [(u'\U00002604 –ù–æ–≤–æ–µ', 'new_func')],
                                    [(u'\U0001F3B1 –ü–æ–º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ', 'magic_ball')],
                                    ]),
        'message_text': '–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª',
        'answer': None
    },
    'horoscope': {
        'data': construct_keyboard([[(u'\U0001F4CC –ù–∞ –¥–µ–Ω—å', 'day')],
                                    [(u'\U0001F5D3 –ù–∞ –Ω–µ–¥–µ–ª—é', 'week')],
                                    [(u'\U0001F313 –ù–∞ –º–µ—Å—è—Ü', 'month')],
                                    [(u'\U0001F407 –ù–∞ –ì–æ–¥', 'year')],
                                    [(u'–ù–∞–∑–∞–¥', 'main_menu')]
                                    ]),

        'message_text': '–ù–∞ —Å–∫–æ–ª—å–∫–æ –≤—ã –¥–æ–≤–µ—Ä—è–µ—Ç–µ –∑–≤—ë–∑–¥–∞–º?',
        'answer': None
    },
    'motivation': {
        'data': construct_keyboard([[(u'\U0001F639 –î–ª—è —Ä–∞–±–æ—Ç—ã', 'joy_cat')],
                                    [(u'\U0001F63B –î–ª—è —É—á—ë–±—ã', 'heart_eyes_cat')],
                                    [(u'\U0001F63C –î–ª—è –ø–æ—Å—Ç—É–ø–∫–∞', 'smirk_cat')],
                                    [(u'\U0001F63D –î–ª—è —Å–∞–º–æ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏', 'kissing_cat')],
                                    [(u'\U0001F640 –î–ª—è –ø–æ–¥–Ω—è—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è', 'scream_cat')],
                                    [(u'–ù–∞–∑–∞–¥', 'main_menu')
                                     ]]),
        'message_text': '–ú–æ—Ç–∏–≤–∞—Ü–∏—è –¥–ª—è...',
        'answer': None
    },
    'new_func': {
        'data': construct_keyboard([[(u"\U0001F34E", 'red_apple'),
                                     (u"\U0001F34C", 'banana'),
                                     (u"\U0001F350", 'green_pear'),
                                     (u"\U0001F34B", 'yellow_lemon'),
                                     (u"\U0001F351", 'peach')],
                                    [('–ù–∞–∑–∞–¥', 'main_menu')]
                                    ]),
        'message_text': '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—Ä—É–∫—Ç',
        'answer': None
    },
    'magic_ball': {
        'data': construct_keyboard([[('–Ø –≥–æ—Ç–æ–≤–∞!', 'ready')]
                                    ]),
        'message_text': '''–ß—ë—Ç–∫–æ –ø—Ä–µ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∫–æ –º–Ω–µ.        


–ú—ã—Å–ª–µ–Ω–Ω–æ –ø–æ—Å—á–∏—Ç–∞–π –¥–æ –ø—è—Ç–∏.
        
        
        
        
–¢—ã –≥–æ—Ç–æ–≤–∞?''',
        'answer': None,
    },

    'day': signs_q,
    'week': signs_q,
    'month': signs_q,
    'year': signs_q,

    'ready': {
        'data': construct_keyboard([
            [(u'–°–ø—Ä–æ—Å–∏—Ç—å –µ—â—ë —Ä–∞–∑', 'magic_ball')],
            [(u'–ù–∞–∑–∞–¥', 'main_menu')]
        ]),
        'message_text': mesg.text,
        'answer': None,
    },
}

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞. –ú–µ–Ω—è–µ—Ç–µ –±–æ—Ç–∞ -- –º–µ–Ω—è–µ—Ç–µ —Ç–æ–∫–µ–Ω. –ü—É–±–ª–∏—á–Ω–æ –Ω–µ –≤—ã—Å—Ç–∞–≤–ª—è—Ç–¨!
token = 

prev_state = {}
state = {'date': None,
	'sign': None,
}

#–§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –≤ —á–∞—Ç –±–æ—Ç—É.
def on_chat_message(msg):
    content_type, chat_type, chat_id = telepot.glance(msg)
    if chat_id not in prev_state:
        prev_state[chat_id] = None

    if prev_state[chat_id] is None:
        keyboard = construct_keyboard([[('–ñ–º–∏ —Å–∫–æ—Ä–µ–µ!', 'main_menu')]])
        bot.sendMessage(chat_id=chat_id,
                        text=start_text,
                        reply_markup=keyboard)
    if prev_state[chat_id] != None:
        keyboard = construct_keyboard([[(u"\U0001F52E –ì–æ—Ä–æ—Å–∫–æ–ø", 'horoscope')],
                                       [(u'\U00002B50 –ú–æ—Ç–∏–≤–∞—Ü–∏—è', 'motivation')],
                                       [(u'\U00002604 –ù–æ–≤–æ–µ', 'new_func')],
                                       [(u'\U0001F3B1 –ü–æ–º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ', 'magic_ball')],
                                       ])
        bot.sendMessage(chat_id=chat_id,
                        text='–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª',
                        reply_markup=keyboard)


def on_callback_query(msg):
    query_id, from_id, query_data = telepot.glance(msg=msg,
                                                   flavor='callback_query')
    msg_id = msg['message']['message_id']
    react_to_query(from_id, msg_id, query_id, query_data)

#–§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–µ—Ä –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ URL
def parser(URL):
    r = requests.get(URL)
    soup = b(r.text, "html.parser")
    zodiac = soup.find_all("div", class_="block-text")
    return [c.text for c in zodiac]

#–§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–∂–∞—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫ 'sign' –∏ 'date'
def generate_horoscope():
    URL = (f"https://www.marieclaire.ru/astro/{state['sign']}/{state['date']}/")
    
    clear_zodiac = parser(URL)
    print(state, clear_zodiac) #–î–ª—è –¥–µ–±–∞–≥–∞
    return {
        'data': construct_keyboard([
            [(u'–ù–∞–∑–∞–¥', 'main_menu')]
        ]),
        'message_text': clear_zodiac,
        'answer': None,
    }

#–§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—ç–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
def react_to_query(chat_id, msg_id, query_id, query_data):
    bot.answerCallbackQuery(query_id, text='Click')
    prev_state[chat_id] = query_data
    bot_data['ready']['message_text'] = mesg.new_message()
    if query_data in bot_data:
        action = bot_data[query_data]
#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∂–∏–º–∞–µ–º–æ–π –∫–Ω–æ–ø–∫–∏. –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ 'horoscope', –∑–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è query_data –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é date
    if query_data in ('day', 'week', 'month', 'year'):
    	state['date'] = query_data
#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∂–∏–º–∞–µ–º–æ–π –∫–Ω–æ–ø–∫–∏. –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ 'signs_q', –∑–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è query_data –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é sign	
    elif query_data in ('aries', 'taurus', 'gemini', 'cancer', 'leo', 'virgo', 'libra', 'scorpio', 
                        'sagittarius', 'capricorn', 'aquarius', 'pisces'):
        state['sign'] = query_data
        action = generate_horoscope()
        
    data = action['data']
    text = action['message_text']
    bot.editMessageText(msg_identifier=(chat_id, msg_id),
        text=text,
    	reply_markup=data)

bot = telepot.Bot(token=token)

MessageLoop(bot, {'chat': on_chat_message,
                  'callback_query': on_callback_query}).run_as_thread()

print('WARNING!!!', 'RoBot working...', 'Press CTRL+C to stop working (NOT RECOMENDED!)', sep='\n')

while 1:
    time.sleep(10)